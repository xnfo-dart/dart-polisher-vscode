{
	"name": "dart-polisher",
	"displayName": "Dart Polisher - Formatter",
	"description": "Dart formatter, custom indents and styles, based on dart_style",
	"repository": "https://github.com/xnfo-dart/dart-polisher-vscode",
	"version": "0.9.1-beta3",
	"publisher": "xnfo",
	"engines": {
		"vscode": "^1.70.0"
	},
	"categories": [
		"Formatters"
	],
	"keywords": [
		"dart",
		"formatter",
		"format",
		"dart format",
		"dart formatter",
		"dart xnfo format",
		"dart xnfo",
		"polisher",
		"polish dart",
		"format dart",
		"dart polisher"
	],
	"icon": "media/dart_polisher2.png",
	"activationEvents": [
		"onLanguage:dart"
	],
	"main-node": "./out/src/extension/extension.js",
	"main": "./out/dist/extension.js",
	"contributes": {
		"menus": {
			"commandPalette": [
				{
					"command": "dart-polisher.startLogging",
					"when": "dart-polisher:anyProjectLoaded"
				},
				{
					"command": "dart-polisher.stopLogging",
					"when": "dart-polisher:anyProjectLoaded && dart-polisher:isCapturingLogs"
				},
				{
					"command": "dart-polisher.openExtensionLog",
					"when": "dart-polisher:anyProjectLoaded"
				},
				{
					"command": "dart-polisher.restartFormatterServer",
					"when": "dart-polisher:anyProjectLoaded"
				}
			]
		},
		"commands": [
			{
				"command": "dart-polisher.restartFormatterServer",
				"title": "Restart Dart Formatter Server",
				"category": "Dart Formatter Server"
			},
			{
				"command": "dart-polisher.startLogging",
				"title": "Capture Logs",
				"category": "Dart Formatter"
			},
			{
				"command": "dart-polisher.openExtensionLog",
				"title": "Open Extension Log",
				"category": "Dart Formatter"
			},
			{
				"command": "dart-polisher.stopLogging",
				"title": "Stop Capturing Logs",
				"category": "Dart Formatter"
			}
		],
		"configuration": [
			{
				"title": "Formatter",
				"order": 1,
				"properties": {
					"dart-polisher.enableFormatter": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "Whether to enable the [Dart Polisher](https://github.com/xnfo-dart/dart-polisher) for Dart.",
						"scope": "window"
					},
					"dart-polisher.doNotFormat": {
						"type": "array",
						"default": [],
						"markdownDescription": "An array of glob patterns that should be excluded for formatting. The pattern is matched against the absolute path of the file. Use `**/test/**` to skip formatting for all test directories.",
						"items": {
							"type": "string"
						},
						"scope": "resource"
					},
					"dart-polisher.formatterServerPath": {
						"type": [
							"null",
							"string"
						],
						"default": null,
						"description": "The path to a custom Dart Formatter Server. This setting is intended for use by Dart Format Server developers.",
						"scope": "machine-overridable"
					},
					"dart-polisher.formatterSshHost": {
						"type": [
							"null",
							"string"
						],
						"default": null,
						"description": "An SSH host to run the Formatter Server.\nThis can be useful when modifying code on a remote machine using SSHFS.",
						"scope": "window"
					},
					"dart-polisher.notifyFormatterErrors": {
						"type": "boolean",
						"default": true,
						"description": "Whether to show a notification the first few times an Formatter Server exception occurs.",
						"scope": "window"
					},
					"dart-polisher.formatterAdditionalArgs": {
						"type": "array",
						"default": [],
						"description": "Additional arguments to pass to the Dart Formatter Server. This setting is intended for use by Dart Format Server developers.",
						"scope": "window",
						"items": {
							"type": "string"
						}
					}
				}
			},
			{
				"title": "Formatting settings",
				"order": 1,
				"properties": {
					"dart-polisher.lineLength": {
						"type": "integer",
						"default": 90,
						"description": "The maximum length of a line of code. This is used by the document formatter.",
						"scope": "resource",
						"order": 10
					},
					"dart-polisher.expressionIndent": {
						"type": [
							"null",
							"number"
						],
						"default": null,
						"markdownDescription": "The number of spaces in a single level of expression nesting. Defaults to `#editor.tabSize#`",
						"scope": "resource",
						"minimum": 0,
						"order": 20
					},
					"dart-polisher.blockIndent": {
						"type": [
							"null",
							"number"
						],
						"default": null,
						"markdownDescription": "The number of spaces in a block or collection body. Defaults to `#editor.tabSize#`",
						"scope": "resource",
						"minimum": 0,
						"order": 21
					},
					"dart-polisher.cascadeIndent": {
						"type": [
							"null",
							"number"
						],
						"default": null,
						"markdownDescription": "How much wrapped cascade sections indent. Defaults to `#editor.tabSize#`",
						"scope": "resource",
						"minimum": 0,
						"order": 22
					},
					"dart-polisher.constructorInitializerIndent": {
						"type": [
							"null",
							"number"
						],
						"default": null,
						"markdownDescription": "The ':' on a wrapped constructor initialization list. Defaults to `#editor.tabSize#`",
						"scope": "resource",
						"minimum": 0,
						"order": 23
					},
					"dart-polisher.codeStyle": {
						"type": "string",
						"default": "Dart Style",
						"enum": [
							"Dart Style",
							"Expanded Style"
						],
						"enumDescriptions": [
							"Original Dart Style (with the ability to set custom indent sizes).",
							"[beta] An outer braces style based on Dart Style."
						],
						"scope": "resource",
						"order": 5
					}
				}
			},
			{
				"title": "Logging",
				"order": 1,
				"properties": {
					"dart-polisher.maxLogLineLength": {
						"type": "number",
						"default": 2000,
						"description": "The maximum length of a line in the log file. Lines longer than this will be truncated and suffixed with an ellipsis.",
						"scope": "window",
						"order": 30
					},
					"dart-polisher.extensionLogFile": {
						"type": [
							"null",
							"string"
						],
						"default": null,
						"description": "The path to a low-traffic log file for basic extension and editor issues.",
						"scope": "machine-overridable",
						"order": 10
					},
					"dart-polisher.polisherLogFile": {
						"type": [
							"null",
							"string"
						],
						"default": null,
						"description": "The path to a log file for communication between VSCode Extension and the Polisher server handler.",
						"scope": "machine-overridable",
						"order": 20
					},
					"dart.formatterInstrumentationLogFile": {
						"type": [
							"null",
							"string"
						],
						"default": null,
						"description": "The path to a log file for very detailed logging in the Formatter server that may be useful when trying to diagnose issues.",
						"scope": "machine-overridable",
						"order": 40
					}
				}
			}
		]
	},
	"scripts": {
		"ts-vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"watch-ext": "tsc -p ./ --watch --extendedDiagnostics",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/src/test/runTest.js",
		
		"vscode:prepublish": "npm run package",
		"webpack": "webpack --mode development",
		"webpack-watch": "webpack --mode development --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"test-compile": "tsc -p ./"
	},
	"dependencies": {
		"minimatch": "^5.1.0",
		"semver": "^7.3.7"
	},
	"devDependencies": {
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.1.1",
		"@types/node": "16.x",
		"@types/semver": "^7.3.12",
		"@types/vscode": "^1.70.0",
		"@typescript-eslint/eslint-plugin": "^5.31.0",
		"@typescript-eslint/parser": "^5.31.0",
		"@vscode/test-electron": "^2.1.5",
		"eslint": "^8.20.0",
		"glob": "^8.0.3",
		"mocha": "^10.0.0",
		"ts-loader": "^9.4.1",
		"typescript": "^4.8.2",
		"webpack": "^5.74.0",
		"webpack-cli": "^4.10.0"
	}
}
